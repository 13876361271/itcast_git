<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ssm_parents</artifactId>
        <groupId>com.zcp</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ssm_web</artifactId>
    <packaging>war</packaging>
<!--在service层写完后应该干嘛呢，接下来写web层，需求是什么：不用传参数获取所有的数据库中的对象返回，用json的形式
从两个方面来说：其中一个方面是引入依赖
另一个方面是写控制器方法-->
<!--    要引入什么依赖-->
    <dependencies>
        <dependency>
            <groupId>com.zcp</groupId>
            <artifactId>ssm_service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
<!--       springmvc的依赖是什么来着-->
        <!--<dependency>
            <groupId>org.apache.portals.bridges</groupId>
            <artifactId>springmvc</artifactId>
            <version>1.0.4</version>
        </dependency>-->
<!--        导入springmvc-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

<!--        servletAPI-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>
<!--        jstl表达式-->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
    </dependencies>
<!--    导入插件-->
    <build>
        <plugins>
<!--            tomcat插件-->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
<!--                插件相关配置，比如端口号之类的-->
                <configuration>
                    <port>8888</port>
                    <path>/</path>
<!--                    解决get请求乱码-->
                    <uriEncoding>UTF-8</uriEncoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>